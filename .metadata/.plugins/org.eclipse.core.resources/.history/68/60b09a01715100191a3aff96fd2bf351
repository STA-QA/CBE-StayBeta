package CBE.StayBeta;

import static org.testng.Assert.assertTrue;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import org.apache.log4j.helpers.LogLog;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import stayBetaInterfaces.HotelSearch;
import utilities.TestBase;

public class HotelSearchImpl extends TestBase implements HotelSearch {

	String RoomSelXpath = "//button[@id='Pivot3-Tab3']/div/span/span";

	@Override
	public void VerifySearchResultsOfDS(String DataSource) {

		String DSXpath = "//*/tr[contains(@id,'m_c_C000_m_m_m_c_c8_c8_uscResults_grvRes__')]/td[1]";
		int count = CBEDriver.findElements(By.xpath(DSXpath)).size();
		System.out.println("The Hotel count is  " + count);

		List<WebElement> elementList = CBEDriver.findElements(By.xpath(DSXpath));
		for (WebElement we : elementList) {
			try {
				assertTrue(we.getText().equalsIgnoreCase(DataSource));
			} catch (AssertionError e) {
				System.out.println(we.getText());
				LogLog.error("Other Data Sources Hotels are displayed in the search");
			}
		}

	}

	@Override
	public void AddRandomHotelToCartFromTSRes() throws InterruptedException {
		Thread.sleep(2000);
		String AddToCartXpath = "//*/tr[contains(@id,'m_c_C000_m_m_m_c_c8_c8_uscResults_grvRes__')]/td[12]/div/a";
		List<WebElement> listings = CBEDriver.findElements(By.xpath(AddToCartXpath));
		Random r = new Random();
		int randomValue = r.nextInt(listings.size()); // Getting a random value that is between 0 and (list's size)-1
		listings.get(randomValue).click();
	}

	@Override
	public void VerifyReviewsForHotel() {
		String ReviewsXpath = "";
		int count = CBEDriver.findElements(By.xpath(ReviewsXpath)).size();
		System.out.println("The Hotel count is  " + count);

		List<WebElement> elementList = CBEDriver.findElements(By.xpath(ReviewsXpath));
		for (WebElement we : elementList) {
			try {
				assertTrue(we.getText().equalsIgnoreCase(""));
			} catch (AssertionError e) {
				System.out.println(we.getText());
				LogLog.error("Other Data Sources Hotels are displayed in the search");
			}
		}

	}

	@Override
	public void VerifyRatingsForHotel() {
		// TODO Auto-generated method stub

	}

	@Override
	public void SelectRoomSelectionTabFromLB() throws InterruptedException {
		Thread.sleep(2000);
		CBEDriver.switchTo().frame(0);
		Thread.sleep(5000);
		CBEDriver.findElement(By.xpath("//*/span[contains(.,'Room selection')]")).click();
	}

	@Override
	public void SelectRoomFromSelectionInLB() {

		String RoomListXpath = "//*[@id=\"glbLightBoxDiv\"]/div[4]/div[1]/div/div[2]/div/div/div[2]/div/div/div[1]/table/tbody/tr/td[contains(@title,'Select and hide options')]";
		List<WebElement> listings = CBEDriver.findElements(By.xpath(RoomListXpath));
		int size = CBEDriver.findElements(By.xpath(RoomListXpath)).size();
		System.out.println("Rooms available are : " + size);
		if (size > 0) {
			Random r = new Random();
			int randomValue = r.nextInt(listings.size());
			listings.get(randomValue).click();
		} else {

		}

	}

	@Override
	public void SelectSameTypeRoomsFromListsInLB(int NoOfRooms) throws InterruptedException {
		// [1]
		// String RoomListXpath =
		// "//*[@id=\"glbLightBoxDiv\"]/div[4]/div[1]/div/div[2]/div/div/div[2]/div/div/div[1]/table/tbody/tr/td[contains(@title,'Select
		// and hide options')]";

		String ChangeIcon1 = "(//*[contains(@title,'Click to see other rooms')])[1]";
		CBEDriver.findElement(By.xpath(ChangeIcon1)).click();

		Thread.sleep(2000);

		String a = "(//*[@id=\"glbLightBoxDiv\"]/div[4]/div[1]/div/div[2]/div/div/div[2]/div/div/div[1]/table/tbody/tr/td[contains(@title,'Select and hide options')])";

		List<WebElement> listings = CBEDriver.findElements(By.xpath(a));
		int size = CBEDriver.findElements(By.xpath(a)).size();
		System.out.println("Rooms available are : " + size);
		Random r = new Random();
		int randomValue = r.nextInt(listings.size());
		if (size > 0) {
			
			listings.get(randomValue).click();
		} else {

		}

		String ChangeIcon2 = "(//*[contains(@title,'Click to see other rooms')])[2]";
		CBEDriver.findElement(By.xpath(ChangeIcon2)).click();

		Thread.sleep(2000);

		String b = "(//*[@id=\"glbLightBoxDiv\"]/div[4]/div[1]/div/div[2]/div/div/div[2]/div/div/div[2]/table/tbody/tr/td[contains(@title,'Select and hide options')])";

		List<WebElement> listings1 = CBEDriver.findElements(By.xpath(b));

		WebDriverWait wait = new WebDriverWait(CBEDriver, 10);
		//WebElement passwordElement = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(b)));
		//passwordElement.click();

		int size1 = CBEDriver.findElements(By.xpath(b)).size();
		System.out.println("Rooms available are : " + size1);
		if (size > 0) 
		{
			//Random ran = new Random();
			//int randomValu = ran.nextInt(listings1.size());
			listings1.get(randomValue).click();
		} 
		else {

		}

	}

}
